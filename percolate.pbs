# This is a simple template script to run batch jobs on Cirrus at EPCC
#
# To submit: qsub cirrusmpinew.pbs
#
# For supervised practical sessions there may be a queue reserved for you,
# so use: qsub -q RXXXXXX cirrusmpinew.pbs
#
# All screen output (stdout and stderr) will appear in a file called
# myjob.pbs.oXXXXX, where XXXXX is the job number assigned at submit time.
#
# David Henty, EPCC, 26/09/2019
#

# You will need to change the Account value below, e.g. if your UUN is
# s1234567 then use: "-A d171-s1234567"
#
# "-N myjob" sets the name of this PBS job
# "-j oe" sends error messages to the same log file as program output
# "-l walltime=00:01:00" sets the maximum run time to 1 minute
# "-l place=excl" ensures that you get exclusive access to all nodes

#PBS -A d171-sxxxxxxx
#PBS -N MPP_percolate
#PBS -j oe
#PBS -l walltime=01:30:00
#PBS -l place=excl

# You will need to change the value of "select" below if you run on
# more than 36 processes; the value of "ncpus" *is always 36*.

#PBS -l select=1:ncpus=36

module load mpt
module load intel-compilers-18

# Change directory back to where the job was submitted from

cd $PBS_O_WORKDIR

echo 'Started at' `date`
echo '--------------------------------------------------------------------------------'

# Run on 4 processes with a maximum of 36 processes on each node.
#
# If you need more than 36 processes you will need to increase the
# "select" option above to ask for more nodes.  For example, for
# between 37 and 72 processes you would use: #PBS -l select=2:ncpus=36

# ******************************************************************************
# weak scaling script

# np=(1 4 9 16 25 36 49 64 81 100 121 144 169 196)
# length=(288 576 864 1152 1440 1728 2016 2304 2592 2880 3168 3456 3744 4032)
#
# for i in {0..13..1}
# do
#     # echo "${np[$i]} ${length[$i]}"
#     for j in {1..5..1}
#     do
#         mpiexec_mpt -ppn 36 -n ${np[$i]} ./percolate 1564 -l ${length[$i]}
#     done
# done
# ******************************************************************************
# run parallel version

mpiexec_mpt -ppn 36 -n 16 ./percolate 1564
# ******************************************************************************
# strong scaling script

# length=1152
# seed=1564
# density=0.411
# maxProc=108
#
# for ((i=1; i<=${maxProc}; i=i+1))
# do
#     echo "Number of processor = $i"
#     for j in {1..5..1}
#     do
#         mpiexec_mpt -ppn 36 -n $i ./percolate ${seed} -p map_$i.pgm -l ${length} -r ${density}
#     done
# done

echo '--------------------------------------------------------------------------------'
echo 'Finished at' `date`
